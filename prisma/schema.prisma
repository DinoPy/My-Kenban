generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "sqlite"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Folder {
  id           String     @id @default(cuid())
  name         String     @default("Project folder")
  userSchemaId String
  position     Int        @default(0)
  User         UserSchema @relation(fields: [userSchemaId], references: [id], onDelete: Cascade)
  Board        Board[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserSchema {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Board  Board[]
  Folder Folder[]
}

model Board {
  id               String     @id @default(cuid())
  title            String     @default("Untitled")
  icon             String     @default("â›©")
  description      String     @default("Add description here, \n You can add multiline description \n start now!")
  position         Int        @default(0)
  favorite         Boolean    @default(false)
  favoritePosition Int        @default(0)
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  userId           String
  user             UserSchema @relation(fields: [userId], references: [id], onDelete: Cascade)
  Section          Section[]
  folder           Folder     @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId         String
}

model Section {
  id        String   @id @default(cuid())
  title     String   @default("")
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  task      Task[]
  position  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id        String   @id @default(cuid())
  title     String   @default("")
  content   String   @default("You can add description here") // @db.Text
  position  Int      @default(0)
  sectionId String
  section   Section  @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
